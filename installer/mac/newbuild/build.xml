<?xml version="1.0" encoding="UTF-8"?>

<!--
The contents of this file are subject to the terms of the Common Development
and Distribution License (the License). You may not use this file except in
compliance with the License.

You can obtain a copy of the License at http://www.netbeans.org/cddl.html
or http://www.netbeans.org/cddl.txt.

When distributing Covered Code, include this CDDL Header Notice in each file
and include the License file at http://www.netbeans.org/cddl.txt.
If applicable, add the following below the CDDL Header, with the fields
enclosed by brackets [] replaced by your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
Microsystems, Inc. All Rights Reserved.
-->

<project name="Mac Installer" basedir="." default="build-all-dmg">
    
    <import file="${basedir}/build.pro"/>
    <property file="${basedir}/Bundle.properties"/>
    <condition property="ml.suffix" value="-ml" else="">
        <istrue value="${mlbuild}"/>
    </condition>      
            
    <target name="build-glassfish-pkg" >
        <echo message="Building ${glassfish-title} into ${basedir}/glassfish"/>
        <ant dir="glassfish"/>      
    </target>
    
    <target name="build-tomcat-pkg">
        <echo message="Building ${tomcat-title} into ${basedir}/tomcat"/>
        <ant dir="tomcat" target="build-pkg"/>              
    </target>
        
    <target name="build-openesb-pkg">
        <echo message="Building ${openesb-title} into ${basedir}/openesb"/>
        <ant dir="openesb" target="build-pkg"/>                     
    </target>
    
    <target name="clean">
        <delete dir="${basedir}/build"/>
        <delete dir="${basedir}/dist"/>             
        <delete dir="${basedir}/netBeans/baseide/build"/>    
        <delete dir="${basedir}/netBeans/php/build"/> 
        <delete dir="${basedir}/tools/classes"/>           
    </target>
    
    <target name="init">    
        <mkdir dir="${basedir}/tools/classes"/> 
        <javac 
            srcdir="${basedir}/tools/src" 
            destdir="${basedir}/tools/classes"          
            debug="true"/>  
        <taskdef 
           name="for-each" 
           classname="org.netbeans.installer.mac.ant.ForEach" 
           classpath="${basedir}/tools/classes/"/>           
    </target>        

    <target name="unzip-nb" description="Unzip clusters to modules" >                                                  
        <mkdir dir="build"/> 
        <property name="clusters" value="php(php),
                                         ide(baseide), nb6.0-etc(baseide), platform(baseide), gsf(baseide)"/>        
        <for-each list="${clusters}" separator="," property="cluster.name"  propertyArg="module.name">
            <ant target="unzip-cluster"/>                           
        </for-each>                                                  
    </target>
    
    <target name="unzip-cluster">
        <mkdir dir="${basedir}/netBeans/${module.name}/build/netbeans"/>
        <exec executable="sh" failonerror="yes">
            <arg value="-c"/>
            <arg value="unzip -d ${basedir}/netBeans/${module.name}/build/netbeans ${common.name}-${cluster.name}.zip"/>
        </exec>      
    </target>
    
    <target name="size-pack-module" description="Count up size of the module, pack200">           
        <exec executable="sh" failonerror="no" outputproperty="size">
            <arg value="-c"/>
            <arg value="cd ${basedir}/netBeans/${module.name}; du -sk build | sed 's/[\t]*build//'"/>
        </exec>        
        <echo message="sizeof.${module.name}=${size}${line.separator}" file="${basedir}/build/sizes.pro" append="true"/>                    
        <exec executable="sh" failonerror="yes">
            <arg value="-c"/>
            <arg value="sh ${basedir}/pack200.sh ${basedir}/netBeans/${module.name}/build"/>
        </exec>           
    </target>

    <target name="build-pkg" depends="unzip-nb" description="Builds NB and packs packages" >                  
        <ant target="size-pack-module">
            <property name="module.name" value="baseide"/>            
        </ant>            
        <ant dir="${basedir}/netBeans/baseide"/>          
        <ant target="build-modules"/>       
    </target>
    
    <target name="build-modules">        
        <property name="modules" value="php(${php-title})"/>
        <for-each list="${modules}" separator="," property="module.name"  propertyArg="module.title">
            <ant target="build-module"/>                           
        </for-each>                        
    </target>
    
    <target name="build-module">
        <copy file="commonfiles/Info.plist" filtering="true" tofile="netBeans/${module.name}/build/Info.plist">
            <filterset>
                <filter token="INSTALLDIR" value="${app.name}/Contents/Resources/NetBeans"/>
                <filter token="BUNDLE" value="netbeans.ide.${module.name}"/>
            </filterset>
        </copy>
        
        <ant target="size-pack-module"/>
        
        <copy file="commonfiles/Description.plist" filtering="true" overwrite="true" tofile="${basedir}/netBeans/${module.name}/pkg/scripts/Description.plist">
            <filterset>
                <filter token="TITLE" value="${module.title}"/>
            </filterset>
        </copy>  
        
        <copy file="${basedir}/netBeans/baseide/pkg/scripts/env.sh" tofile="${basedir}/netBeans/${module.name}/pkg/scripts/env.sh"/> 
        <copy file="${basedir}/netBeans/baseide/pkg/scripts/addproduct_id.sh" tofile="${basedir}/netBeans/${module.name}/pkg/scripts/addproduct_id.sh"/>        
        
        <echo message="Building ${module.name} into ${basedir}/build/${module.name}.pkg"/>
        <exec executable="sh" failonerror="yes">
            <arg value="-c"/>
            <arg value=" /Developer/Tools/packagemaker -build -v -p ${basedir}/build/${module.name}.pkg -f ${basedir}/netBeans/${module.name}/build/netbeans -i ${basedir}/netBeans/${module.name}/build/Info.plist -r ${basedir}/netBeans/${module.name}/pkg/scripts -d ${basedir}/netBeans/${module.name}/pkg/scripts/Description.plist"/>
        </exec>                                         
    </target>          
    
    <target name="build-all-dmg" depends="clean,init,build-pkg">                                                    
        <property file="${basedir}/build/sizes.pro"/>  
        <mkdir dir="dist"/>                  
        <property name="bundles" value="-php(./build/baseide.pkg ./build/php.pkg)"/>
        <for-each list="${bundles}" separator="," property="bundle.type"  propertyArg="packages">
            <delete dir="${basedir}/dist_dmg"/>                          
            <ant target="build-dmg">
                 <property name="dmg.name" value="${dmg.prefix.name}${ml.suffix}${bundle.type}-macosx"/>  
                 <property name="mpkg.name" value="${mpkg.name_nb}"/>
            </ant>     
        </for-each>         
        <delete file="${basedir}/build/sizes.pro"/>
    </target>     
            
    <target name="prepare-lproj-dirs">  
        <mkdir dir="${basedir}/dmg/Resources_full"/>
        <property name="resources.full.dir" value="${basedir}/dmg/Resources_full"/> 
        <copy file="${basedir}/Bundle.properties" todir="${resources.full.dir}"/>
        <copy  todir="${resources.full.dir}">
            <fileset dir="${basedir}/dmg/Resources/" includes="*.html"/>
        </copy>
       
        <condition property="nb.locales.nonzero.length">
            <and>
                <isset property="nb.locales"/>
                <length string="${nb.locales}" when="greater" length="0"/>
            </and>
        </condition>   
        <condition property="locales" value=",${nb.locales}" else="">
            <and>
                <istrue value="${mlbuild}"/>
                <istrue value="${nb.locales.nonzero.length}"/>
            </and>   
        </condition>
        <echo message="locales are: ${locales}"/>        
        
        <condition property="do.copy.translated.files">
            <istrue value="${mlbuild}"/>
        </condition>        
        <ant target="copy-translated-files"/> 
        
        <for-each list="${locales}" separator="," property="locale">
            <ant target="build-lproj-dir"/>                           
        </for-each>            
        <delete dir="${resources.full.dir}"/>
    </target> 
       
    <target name="copy-translated-files" if="do.copy.translated.files">         
        <copy todir="${resources.full.dir}" flatten="true" includeEmptyDirs="false" failonerror="false">                    
            <fileset dir="${translatedfiles.src}"> 
                <include name="**/mac/newbuild/**"/>
            </fileset>
        </copy>               
    </target>        
       
    <target name="init-locale-propeties">
        <echo message="Init locale properties for locale: ${locale}"/>
        <!-- set the name of the locale suffix-->                                   
        <condition property="locale.suffix" value="" else="_${locale}">
            <equals arg1="${locale}" arg2=""/>
        </condition>
        <condition property="locale.name" value="english" else="${locale}">
            <equals arg1="${locale}" arg2=""/>
        </condition>                                                            
        <!-- find out name of lproj dir from the map file-->
        <exec executable="sh" failonerror="yes" outputproperty="locale.dir">
            <arg value="-c"/>
            <arg value="cat ${basedir}/dmg/lprojdirnames.map  | sed '/'${locale.name}'=/!d;s/'${locale.name}'=//'"/>
        </exec>                     
    </target>  

    <target name="build-lproj-dir" depends="init-locale-propeties">
        <echo message="Building ${locale.dir}.lproj dir..."/>        
        <!-- create lproj dir -->
        <mkdir dir="${mpkg.file}/Contents/Resources/${locale.dir}.lproj"/>
        <!-- copy Welcome.html and Localizable.strings -->                 
        <copy file="${resources.full.dir}/Welcome${bundle.type}${locale.suffix}.html"
              tofile="${mpkg.file}/Contents/Resources/${locale.dir}.lproj/Welcome.html" failonerror="false"/>               
        <exec executable="sh" failonerror="no">
            <arg value="-c"/>
            <arg value="cat ${resources.full.dir}/Bundle${locale.suffix}.properties |
                sed 's/#.*$//;s/^/&quot;/;s/$/&quot;;/;s/=/&quot; = &quot;/;s/^&quot;&quot;;//;
                s/'\$${buildnumber}'/'${buildnumber}'/;s/'\$${tomcat.version}'/'${tomcat.version}'/' 
                > ${resources.full.dir}/Localizable.strings"/>
        </exec>         
        <native2ascii encoding="UTF-16" src="${resources.full.dir}" dest="${mpkg.file}/Contents/Resources/${locale.dir}.lproj" 
                      reverse="true" includes="Localizable.strings"/>                        
    </target>     
  
    <target name="build-all-mysql-dmg" depends="clean,init,build-pkg,build-glassfish-pkg,build-tomcat-pkg,build-openesb-pkg">   
        <mkdir dir="dist"/>         
        <get src="${mysql_connector.location}" 
             dest="${basedir}/build/${mysql_connector.name}.jar"
             usetimestamp="true"/>
        
        <ant target="build-mysql-dmg">
            <property name="mysql.location" value="${mysql_10.5.location}"/>
            <property name="mysql.pkg.name" value="${mysql_10.5.pkg.name}"/>                
            <property name="dmg.name" value="${mysql_10.5.dmg.name}"/>             
        </ant> 
        <ant target="build-mysql-dmg">
            <property name="mysql.location" value="${mysql_10.4.location}"/>
            <property name="mysql.pkg.name" value="${mysql_10.4.pkg.name}"/>
            <property name="dmg.name" value="${mysql_10.4.dmg.name}"/>                        
        </ant>
        <delete file="${basedir}/build/${mysql_connector.name}.jar"/> 
        <delete file="${basedir}/build/sizes.pro"/>        
    </target>    

    <target name="clean-mysql">
        <delete dir="${basedir}/build/mysqltmp"/>
        <delete dir="${basedir}/build/mysql.pkg"/>
        <delete dir="${basedir}/build/mysqlstartup.pkg"/>
    </target>
    
    <target name="build-mysql-dmg" depends="clean-mysql">
        <echo message="Building ${dmg.name}.dmg"/> 
        <mkdir dir="${basedir}/dist_dmg"/>
        <property name="mysql.dir" value="${basedir}/build/mysqltmp"/>                             
        <mkdir dir="${mysql.dir}"/>              
        <echo message="Downloading MySQL from ${mysql.location}"/>         
        <get src="${mysql.location}" dest="${mysql.dir}/mysql.dmg" usetimestamp="true"/>        
        
        <echo message="Mounting ${mysql.dir}/mysql.dmg"/>                  
        <exec executable="sh" failonerror="yes">
            <arg value="-c"/>
            <arg value="hdiutil mount -mountpoint ${mysql.dir} ${mysql.dir}/mysql.dmg;
                        cp -RPfv ${mysql.dir}/${mysql.pkg.name}.pkg  ${basedir}/build/mysql.pkg;
                        cp -RPfv ${mysql.dir}/${mysql_startup.pkg.name}.pkg ${basedir}/build/mysqlstartup.pkg;
                        cp -RPfv ${mysql.dir}/${mysql_prefPane.name} ${basedir}/dist_dmg/${mysql_prefPane.name};
                        hdiutil detach ${mysql.dir};"/>            
        </exec>                                            
        <delete dir="${mysql.dir}"/>       
        
        <ant target="size-package">
            <property name="package" value="${basedir}/build/mysql.pkg"/>    
            <property name="module.name" value="mysql"/>    
        </ant>
        <ant target="size-package">
            <property name="package" value="${basedir}/build/mysqlstartup.pkg"/>    
            <property name="module.name" value="mysqlstartup"/>    
        </ant>     
        
        <copy file="${basedir}/build/${mysql_connector.name}.jar" 
              todir="${basedir}/build/mysql.pkg/Contents/Resources"/>        
             
        <echo message="script_dir=`dirname &quot;$$0&quot;` ${line.separator}
if [ -d &quot;${glassfish.install.dir}&quot; ] ; then ${line.separator}
    cp -RPf &quot;$$script_dir&quot;/${mysql_connector.name}.jar &quot;${glassfish.install.dir}/lib/&quot;${line.separator}
fi"
              file="${basedir}/build/mysql.pkg/Contents/Resources/postflight"
              append="true"/>        
              
        <ant target="build-dmg">             
             <property name="packages" value="./build/baseide.pkg ./build/javase.pkg  ./build/javaee.pkg ./build/ruby.pkg ./build/glassfish.pkg ./build/mysql*.pkg"/>  
             <property name="bundle.type" value="-mysql"/> 
             <property name="mpkg.name" value="${mpkg.name_nb_mysql}"/> 
             
        </ant>          
    </target>
    
    <target name="size-package" description="Count up size of the package">        
        <exec executable="sh" failonerror="no" outputproperty="size">
            <arg value="-c"/>
            <arg value="cd ${package}/Contents; cat Info.plist | sed -n '/IFPkgFlagInstalledSize/{n;p;}' | sed 's/\&lt;integer\&gt;//' | sed 's/\&lt;\/integer\&gt;//'"/>
        </exec>        
        <echo message="sizeof.${module.name}=${size}${line.separator}" file="${basedir}/build/sizes.pro" append="true"/>                                     
    </target>    
    
        
    <target name="build-dmg">   
        <property file="${basedir}/build/sizes.pro"/>         
        <echo message="Building dmg for ${dmg.name}.dmg..."/>                    
        <property name="mpkg.file" value="${basedir}/dist_dmg/${mpkg.name}.mpkg"/>   
        
        <copy file="${basedir}/dmg/Resources/bgimage.tif" 
              tofile="${mpkg.file}/Contents/Resources/background.tif"/>  
        <copy file="${basedir}/dmg/Resources/license.txt" 
              tofile="${mpkg.file}/Contents/Resources/License.txt" />                         
                         
        <ant target="prepare-lproj-dirs"/>                                             
       
        <copy file="dmg/distribution${bundle.type}.dist" tofile="${mpkg.file}/Contents/distribution.dist">                                    
            <filterset>                      
                <filter token="SIZE_BASEIDE" value="${sizeof.baseide}"/>                
                <filter token="SIZE_PHP" value="${sizeof.php}"/>    
                <filter token="SIZE_MYSQL" value="${sizeof.mysql}"/> 
                <filter token="SIZE_MYSQLSTARTUP" value="${sizeof.mysqlstartup}"/>                 
            </filterset>
        </copy> 
        
        <mkdir dir="${mpkg.file}/Contents/Packages"/>         
        <exec executable="sh" failonerror="yes">
            <arg value="-c"/>
            <arg value="cp -RPf ${packages} '${mpkg.file}'/Contents/Packages"/>
        </exec>                                            
        
        <exec executable="sh" failonerror="yes">
          <arg value="-c"/>
          <arg value="sh dmg/createdmg.sh '${dmg.name}'.dmg '${mpkg.name}'"/>
        </exec>  
        <delete dir="dist_dmg"/>
    </target>             
</project>          
